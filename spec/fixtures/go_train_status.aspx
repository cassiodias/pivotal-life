1|#||4|4058|updatePanel|ctl00_ctl00_Sidebar1_Train_update1_serviceTablePanel|<div id="serviceTable"><table class='gridStatusTrain' style='padding:0px; border-spacing:0px' role='presentation'><thead><tr><th class='gridStatusWidthOne'>Lines</th><th class='gridStatusWidthTwo'>Status</th></tr></thead><tbody><tr data-symbol='LW'><td class='gridStatusWidthOne'>Lakeshore West</td><td class='gridStatusWidthTwo'>On Time<span class='messageDisrp' style='display:none'>0</span></td></tr><tr data-symbol='LE'><td class='gridStatusWidthOne'>Lakeshore East</td><td class='gridStatusWidthTwo'><a class='delayLink' tabindex="0" href='#' style='text-decoration:underline;' aria-label="Lakeshore East EASTBOUND Delayed. Union Station 10:18 - Oshawa GO 11:16. Delay of 07 minutes:00 seconds. Train is Moving. More information will be provided for delays greater than 10 minutes." rel='span.messageDisrp' data-geo='data-geo'>Delayed</a><span class='messageDisrp' style='display:none'><h3 class='trainD'>Lakeshore East</h3><ul class='listTrainD'><li class='subtitle'><h4>EASTBOUND</h4></li><li class='odd'><span>Union Station 10:18 - Oshawa GO 11:16<br />Delay of 07 minutes:00 seconds<br />Moving</span></li></ul><span class='furtherDetail'>More information will be provided for delays greater than 10 minutes.</span></span></td></tr><tr data-symbol='GT'><td class='gridStatusWidthOne'>Kitchener</td><td class='gridStatusWidthTwo'><a class='delayLink' tabindex="0" href='#' style='text-decoration:underline;' aria-label="Kitchener EASTBOUND Delayed. Mount Pleasant GO 09:55 - Union Station 10:49. Delay of 11 minutes:46 seconds. Train is Moving. More information will be provided for delays greater than 10 minutes." rel='span.messageDisrp' data-geo='data-geo'>Delayed</a><span class='messageDisrp' style='display:none'><h3 class='trainD'>Kitchener</h3><ul class='listTrainD'><li class='subtitle'><h4>EASTBOUND</h4></li><li class='odd'><span>Mount Pleasant GO 09:55 - Union Station 10:49<br />Delay of 11 minutes:46 seconds<br />Moving</span></li></ul><span class='furtherDetail'>More information will be provided for delays greater than 10 minutes.</span></span></td></tr><tr data-symbol='ST'><td class='gridStatusWidthOne'>Stouffville</td><td class='gridStatusWidthTwo'><a class='delayLink' tabindex="0" href='#' style='text-decoration:underline;' aria-label="Stouffville SOUTHBOUND Delayed. Lincolnville GO 10:14 - Union Station 11:27. Delay of 11 minutes:36 seconds. Train is Moving. Reason of Delay: Equipment problem..  NORTHBOUND Delayed. Union Station 10:15 - Unionville GO 10:54. Delay of 24 minutes:13 seconds. Train is Stopped. Reason of Delay: Defective crossing.. More information will be provided for delays greater than 10 minutes." rel='span.messageDisrp' data-geo='data-geo'>Delayed</a><span class='messageDisrp' style='display:none'><h3 class='trainD'>Stouffville</h3><ul class='listTrainD'><li class='subtitle'><h4>SOUTHBOUND</h4></li><li class='odd'><span>Lincolnville GO 10:14 - Union Station 11:27<br />Delay of 11 minutes:36 seconds<br />Moving<br />Equipment problem.</span></li><li class='subtitle'><h4>NORTHBOUND</h4></li><li class='even'><span>Union Station 10:15 - Unionville GO 10:54<br />Delay of 24 minutes:13 seconds<br />Stopped<br />Defective crossing.</span></li><li><a class='moreInfoUpdateTamp moreInfoLink' style='text-decoration:underline;' href='http://www.gotransit.com/publicroot/en/updates/servicestatus.aspx?tab=0&routeID=ST'>more information</a></li></ul><span class='furtherDetail'>More information will be provided for delays greater than 10 minutes.</span></span></td></tr><tr data-symbol='RH'><td class='gridStatusWidthOne'>Richmond Hill</td><td class='gridStatusWidthTwo'>On Time<span class='messageDisrp' style='display:none'>0</span></td></tr><tr data-symbol='BR'><td class='gridStatusWidthOne'>Barrie</td><td class='gridStatusWidthTwo'>On Time<span class='messageDisrp' style='display:none'>0</span></td></tr><tr data-symbol='MI'><td class='gridStatusWidthOne'>Milton</td><td class='gridStatusWidthTwo'>On Time<span class='messageDisrp' style='display:none'>0</span></td></tr></tbody></table></div>|781|updatePanel|ctl00_ctl00_Sidebar1_Train_update1_gridStatusBusPanel|<div id="gridStatusBus"><table class='gridStatusTrain' style='padding:0px; border-spacing:0px'  role='presentation'><thead><tr><th class='gridStatusWidthOne'>Routes</th><th class='gridStatusWidthTwo'>Status</th></tr></thead></table><div class='scrollBus'><table class='gridStatusTrain' style='padding:0px; border-spacing:0px' ><tbody><tr data-symbol='88'><td class='gridStatusWidthOne'>88 - Peterborough Hwy 115 Train Meet Service</td><td class='gridStatusWidthTwo'><span>Delayed</span><br /><a class='moreInfoUpdateTamp moreInfoLink' style='text-decoration:underline;' href='http://www.gotransit.com/publicroot/en/updates/servicestatus.aspx?rtab=1&tab=2&routeID=88'>more information</a><span class='messageDisrp' style='display:none'>0</span></td></tr></tbody></table></div></div>|2158|updatePanel|ctl00_ctl00_Sidebar1_Train_update1_gridStatusElevatorPanel|<div id="gridStatusElevator" class="scrollBus"><table class='gridStatusTrain' style='padding:0px; border-spacing:0px' summary='This table lists all stations with current status'><thead><tr><th class='gridStatusWidthOne'>Stations</th><th class='gridStatusWidthTwo'>Status</th></tr></thead></table><div class='scrollBus'><table class='gridStatusTrain' style='padding:0px; border-spacing:0px' ><tbody><tr><td class='gridStatusWidthOne'>Bramalea GO</td><td class='gridStatusWidthTwo'><span>Out of Service</span><br /><a title='more info' class='ideeTampa moreInfoLink' style='text-decoration:underline;' href='http://www.gotransit.com/publicroot/en/updates/servicestatus.aspx?rtab=2&tab=4&routeID=BE'>more information</a></td></tr><tr><td class='gridStatusWidthOne'>Brampton GO</td><td class='gridStatusWidthTwo'><span>Out of Service</span><br /><a title='more info' class='ideeTampa moreInfoLink' style='text-decoration:underline;' href='http://www.gotransit.com/publicroot/en/updates/servicestatus.aspx?rtab=2&tab=4&routeID=BR'>more information</a></td></tr><tr><td class='gridStatusWidthOne'>Burlington GO</td><td class='gridStatusWidthTwo'><span>Out of Service</span><br /><a title='more info' class='ideeTampa moreInfoLink' style='text-decoration:underline;' href='http://www.gotransit.com/publicroot/en/updates/servicestatus.aspx?rtab=2&tab=4&routeID=BU'>more information</a></td></tr><tr><td class='gridStatusWidthOne'>Danforth GO</td><td class='gridStatusWidthTwo'><span>Out of Service</span><br /><a title='more info' class='ideeTampa moreInfoLink' style='text-decoration:underline;' href='http://www.gotransit.com/publicroot/en/updates/servicestatus.aspx?rtab=2&tab=4&routeID=DA'>more information</a></td></tr><tr><td class='gridStatusWidthOne'>Guildwood GO</td><td class='gridStatusWidthTwo'><span>Out of Service</span><br /><a title='more info' class='ideeTampa moreInfoLink' style='text-decoration:underline;' href='http://www.gotransit.com/publicroot/en/updates/servicestatus.aspx?rtab=2&tab=4&routeID=GU'>more information</a></td></tr></tbody></table></div><span class='furtherDetail busNotesOther'>All other elevators are in service.</span></div>|81|updatePanel|ctl00_ctl00_Sidebar1_Train_update1_serviceTickerTimeStampPanel|<span id="ctl00_Sidebar1_Train_update1_serviceTickerTimeStamp">10:56:53 AM</span>|0|updatePanel|ctl00_ctl00_Sidebar1_Train_update1_mataPanel||62|updatePanel|ctl00_RadAjaxManager1SU|<span id="ctl00_RadAjaxManager1" style="display:none;"></span>|0|hiddenField|__EVENTTARGET||0|hiddenField|__EVENTARGUMENT||44012|hiddenField|__VIEWSTATE||8|hiddenField|__VIEWSTATEGENERATOR|F1C4196B|100|hiddenField|__EVENTVALIDATION|/wEdAAMVgJpVRiIoTos6lSoA+nAYp0yD9I7J9AD9eSLcltBEQq2Utugodpb/XxqhEQqFRKx0OAGojXDSZI2wwm8KJn9pPXV6oQ==|120|asyncPostBackControlIDs||ctl00$ContentPlaceHolder1$refreshAjaxBig,,ctl00$Sidebar1$Train_update1$Timer1,,ctl00$Sidebar1$Train_update1$refreshAjax,|0|postBackControlIDs|||574|updatePanelIDs||tctl00$ctl00$ContentPlaceHolder1$_trainStatusPanel,,tctl00$ctl00$ContentPlaceHolder1$trainAdvisoriesPanel,,tctl00$ctl00$ContentPlaceHolder1$_busStatusPanel,,tctl00$ctl00$ContentPlaceHolder1$busAdvisoriesPanel,,tctl00$ctl00$ContentPlaceHolder1$_elevatorStatusPanel,,tctl00$ctl00$Sidebar1$Train_update1$serviceTablePanel,,tctl00$ctl00$Sidebar1$Train_update1$gridStatusBusPanel,,tctl00$ctl00$Sidebar1$Train_update1$gridStatusElevatorPanel,,tctl00$ctl00$Sidebar1$Train_update1$serviceTickerTimeStampPanel,,tctl00$ctl00$Sidebar1$Train_update1$mataPanel,,tctl00$RadAjaxManager1SU,|0|childUpdatePanelIDs|||303|panelsToRefreshIDs||ctl00$ctl00$Sidebar1$Train_update1$serviceTablePanel,,ctl00$ctl00$Sidebar1$Train_update1$gridStatusBusPanel,,ctl00$ctl00$Sidebar1$Train_update1$gridStatusElevatorPanel,,ctl00$ctl00$Sidebar1$Train_update1$serviceTickerTimeStampPanel,,ctl00$ctl00$Sidebar1$Train_update1$mataPanel,,ctl00$RadAjaxManager1SU,|2|asyncPostBackTimeout||90|26|formAction||./servicestatus.aspx?tab=1|28|pageTitle||GO Transit - Service Updates|110|scriptBlock|ScriptPath|/Telerik.Web.UI.WebResource.axd?_TSM_HiddenField_=ctl00_ScriptManager_TSM&compress=1&_TSM_CombinedScripts_=%3b|1885|scriptBlock|ScriptContentWithTags|{"text":"\r\n                        function popupTooltip() {\r\n                            $(\u0027a[data-geo]\u0027).each(function () {\r\n\r\n                                $(this).qtip({\r\n                                    position: {\r\n                                        my: \"left center\",\r\n                                        at: \"right center\",\r\n                                        effect: true,\r\n                                        viewport: $(window),\r\n                                        adjust: {\r\n                                            method: \u0027flip shift\u0027\r\n                                        }\r\n                                    },\r\n                                    content: {\r\n                                        text: function () {\r\n                                            var element = $(this);\r\n                                            var nextTextFieldId = $(this).next(\u0027span.messageDisrp\u0027).html();\r\n                                            return nextTextFieldId;\r\n                                        },\r\n                                        title: {\r\n                                            button: true\r\n                                        }\r\n                                    },\r\n                                    hide: \u0027unfocus\u0027,\r\n                                    show: {\r\n                                        event: \u0027click\u0027,\r\n                                        solo: true // Only show one tooltip at a time\r\n                                    }\r\n                                })\r\n                            })\r\n                            .click(function (event) { event.preventDefault(); });\r\n                        }\r\n\r\n                    ","type":"text/javascript"}|85|scriptStartupBlock|ScriptContentWithTags|{"text":"$(\u0027.delayLink\u0027).click = popupTooltip();","type":"text/javascript"}|3253|scriptStartupBlock|ScriptContentNoTags|Sys.Application.add_init(function() {
    $create(Telerik.Web.UI.RadAjaxManager, {"_updatePanels":"","ajaxSettings":[{InitControlID : "ctl00_ContentPlaceHolder1_refreshAjaxBig",UpdatedControls : [{ControlID:"_trainStatus",PanelID:"ctl00_ContentPlaceHolder1_LoadingPanelMata"},{ControlID:"trainAdvisories",PanelID:"ctl00_ContentPlaceHolder1_LoadingPanelMata"},{ControlID:"_busStatus",PanelID:"ctl00_ContentPlaceHolder1_LoadingPanelMata"},{ControlID:"busAdvisories",PanelID:"ctl00_ContentPlaceHolder1_LoadingPanelMata"},{ControlID:"_elevatorStatus",PanelID:"ctl00_ContentPlaceHolder1_LoadingPanelMata"},{ControlID:"",PanelID:"ctl00_ContentPlaceHolder1_LoadingPanelMata"}]},{InitControlID : "ctl00_ContentPlaceHolder1__trainStatus_trainListCombo",UpdatedControls : [{ControlID:"",PanelID:""}]},{InitControlID : "ctl00_ContentPlaceHolder1_trainAdvisories_trainAdvListCombo",UpdatedControls : [{ControlID:"",PanelID:""}]},{InitControlID : "ctl00_ContentPlaceHolder1__busStatus_busListCombo",UpdatedControls : [{ControlID:"",PanelID:""}]},{InitControlID : "ctl00_ContentPlaceHolder1_busAdvisories_busAdvListCombo",UpdatedControls : [{ControlID:"",PanelID:""}]},{InitControlID : "ctl00_ContentPlaceHolder1__elevatorStatus_elevatorListCombo",UpdatedControls : [{ControlID:"",PanelID:""}]},{InitControlID : "ctl00_Sidebar1_Train_update1_Timer1",UpdatedControls : [{ControlID:"serviceTable",PanelID:"LoadingPanelServiceAjax"},{ControlID:"gridStatusBus",PanelID:"LoadingPanelServiceAjax"},{ControlID:"gridStatusElevator",PanelID:"LoadingPanelServiceAjax"},{ControlID:"ctl00_Sidebar1_Train_update1_serviceTickerTimeStamp",PanelID:""},{ControlID:"mata",PanelID:""}]},{InitControlID : "ctl00_Sidebar1_Train_update1_refreshAjax",UpdatedControls : [{ControlID:"serviceTable",PanelID:"LoadingPanelServiceAjax"},{ControlID:"gridStatusBus",PanelID:"LoadingPanelServiceAjax"},{ControlID:"gridStatusElevator",PanelID:"LoadingPanelServiceAjax"},{ControlID:"ctl00_Sidebar1_Train_update1_serviceTickerTimeStamp",PanelID:""},{ControlID:"mata",PanelID:""}]}],"clientEvents":{OnRequestStart:"",OnResponseEnd:""},"defaultLoadingPanelID":"","enableAJAX":true,"enableHistory":false,"links":["/MasterPages/css/base.css","/MasterPages/css/main.css","/MasterPages/css/mxdropdown.css","/MasterPages/css/font-awesome.css"],"styles":["\r\n.skip\r\n{\r\n  left:-999px;\r\n  position:absolute;\r\n  top:auto;\r\n  width:1px;\r\n  height:1px;\r\n  overflow:hidden;\r\n  z-index:-999\r\n}\r\n\r\n.skip:focus,.skip:active\r\n{\r\n  color:#fff;\r\n  background-color:#387c2b;\r\n  left:40%;\r\n  top:10px;\r\n  width:20%;\r\n  height:auto;\r\n  overflow:auto;\r\n  padding:20px 0;\r\n  border-radius:5px;\r\n  border:2px solid #fafafa;\r\n  text-align:center;\r\n  font-size:1.6rem;\r\n  z-index:999\r\n}\r\n  \ta:focus {\r\n  \t\toutline: 1px solid #4d90fe;\r\n  \t}\r\n\r\n\t#tabboxes a:focus {\r\n\t\toutline: 2px solid #4d90fe;\r\n  \t\topacity: 0.7;\r\n\t}\r\n\r\n\t#tabboxessidebar a:focus {\r\n\t\toutline: 2px solid #4d90fe;\r\n  \t\topacity: 0.7;\r\n\t}\r\n\r\n\r\n        input:focus\r\n        {\r\n                  outline: 1px solid #4d90fe;\r\n           }\r\n  "],"uniqueID":"ctl00$RadAjaxManager1","updatePanelsRenderMode":0}, null, null, $get("ctl00_RadAjaxManager1"));
});
